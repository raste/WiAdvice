<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addSucc" xml:space="preserve">
    <value>Успешно добавихте компанията!</value>
  </data>
  <data name="blAddAltNames" xml:space="preserve">
    <value>Добавиш други имена на компанията.</value>
  </data>
  <data name="blAddCategories" xml:space="preserve">
    <value>Добавиш категории, в които компанията ще има продукти. - Важно</value>
  </data>
  <data name="blAddCharacteristics" xml:space="preserve">
    <value>Добавиш характеристики.</value>
  </data>
  <data name="blAddProduct" xml:space="preserve">
    <value>Добавиш продукт към компанията.</value>
  </data>
  <data name="blFillGallery" xml:space="preserve">
    <value>Добавиш лого и изображения към галерията на компанията.</value>
  </data>
  <data name="blModifDescription" xml:space="preserve">
    <value>Промениш описанието на компанията.</value>
  </data>
  <data name="characters" xml:space="preserve">
    <value>символа</value>
  </data>
  <data name="companyData" xml:space="preserve">
    <value>Информация за компанията</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Описание :</value>
  </data>
  <data name="descriptionRules" xml:space="preserve">
    <value>Дължината на описанието трябва да е между</value>
  </data>
  <data name="descriptionRules2" xml:space="preserve">
    <value>&lt;br /&gt;Ако дължината е по-голяма, добавете останалото като характеристика.</value>
  </data>
  <data name="errCantAdd" xml:space="preserve">
    <value>Не може да добавяте компании.</value>
  </data>
  <data name="errLogIn" xml:space="preserve">
    <value>Впишете се, за да добавяте компании.</value>
  </data>
  <data name="errMinTimeAfterAddingCompanyDidntPass" xml:space="preserve">
    <value>Може да добавите нова компания след :</value>
  </data>
  <data name="errMinTimeAfterAddingCompanyDidntPass2" xml:space="preserve">
    <value>минути.</value>
  </data>
  <data name="goTo" xml:space="preserve">
    <value>Иди на страницата на</value>
  </data>
  <data name="goTo2" xml:space="preserve">
    <value> за да :</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Име :</value>
  </data>
  <data name="nameRules" xml:space="preserve">
    <value>Дължината на името трябва да е между</value>
  </data>
  <data name="pageIntro" xml:space="preserve">
    <value>Добавяне на компания</value>
  </data>
  <data name="siteRules" xml:space="preserve">
    <value>Моля, въведете официалният сайт на компанията. Ако не го знаете, оставете полето празно.</value>
  </data>
  <data name="submit" xml:space="preserve">
    <value>Добави</value>
  </data>
  <data name="textLength" xml:space="preserve">
    <value>Дължина на описанието :</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Добави компания към wiadvice.com</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Тип :</value>
  </data>
  <data name="typeRules" xml:space="preserve">
    <value>Изберете този тип който подхожда най-много.</value>
  </data>
  <data name="website" xml:space="preserve">
    <value>Сайт :</value>
  </data>
</root>